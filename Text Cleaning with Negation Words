df = pd.read_excel("Final.xlsx") 
import pandas as pd
import openpyxl
import re
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk.stem import WordNetLemmatizer
from autocorrect import Speller

# Load NLTK's stopword list
nltk.download('stopwords')
stop_words = set(stopwords.words("english"))

# Define negation words to keep
negation_words = {'no', 'not', 'never', 'don', "don't", 'aren', "aren't", 'isn', "isn't", 'wasn', "wasn't", 'weren', "weren't", 'cannot', 'couldn', "couldn't", 'didn', "didn't", 'doesn', "doesn't", 'hadn', "hadn't", 'hasn', "hasn't", 'haven', "haven't", 'mustn', "mustn't", 'needn', "needn't", 'shouldn', "shouldn't", 'won', "won't", 'wouldn', "wouldn't"}


# Create new set of stopwords that excludes negation words
new_stop_words = stop_words.difference(negation_words)

# Load NLTK's lemmatizer
nltk.download('wordnet')
lemmatizer = WordNetLemmatizer()

# Load Excel file
df = pd.read_excel("Final.xlsx")  # Replace with your file name


# Clean text in each row of a specific column
def clean_text(text):
    # Convert to lowercase
    text= str(text)

    # Remove HTML tags
    text = re.sub(r'<.*?>', '', text)

    # Remove URLs
    text = re.sub(r'http\S+', '', text)

    # Remove special characters and numbers
    text = re.sub(r'[^a-zA-Z\s]', '', text)

    text = text.lower()

    # Tokenize text into words
    words = word_tokenize(text)

    # Remove stopwords (except for negation words)
    words = [word for word in words if word not in new_stop_words or word in negation_words]

    spell = Speller(lang='en')
    words = [spell(word) for word in words]

    # Lemmatize words
    words = [lemmatizer.lemmatize(word) for word in words]

    # Join words back into a cleaned text
    cleaned_text = " ".join(words)

    return cleaned_text


# Apply the text cleaning function to a specific column in the DataFrame
df['cleaned_text'] = df['Comment '].apply(clean_text)  # Replace 'text_column_name' with your column name


with pd.ExcelWriter("Final.xlsx") as writer:
    df.to_excel(writer,  index=False)  # Write the updated data to the same Excel file, in the same sheet or a new sheet (e.g., 'Sheet1')
