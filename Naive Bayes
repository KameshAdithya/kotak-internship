import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from gensim.models import Word2Vec
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import MinMaxScaler

# Load data from Excel file
data = pd.read_excel('Final.xlsx')
# Remove NaN values from the data
data.dropna(subset=['wnw'], inplace=True)
# Convert comments to strings
data["wnw"] = data["wnw"].astype(str)
# Split data into training and testing sets
train_data, test_data = train_test_split(data, test_size=0.2, random_state=42)

# Convert comments to a matrix of n-gram token counts
ngram_vectorizer = CountVectorizer(ngram_range=(1,6))
train_comments = ngram_vectorizer.fit_transform(train_data["wnw"])
test_comments = ngram_vectorizer.transform(test_data["wnw"])

# Train the Naive Bayes classifier
nb_classifier = MultinomialNB()
nb_classifier.fit(train_comments, train_data["Sentiment"])

# Use the classifier to predict sentiment of test comments
predicted_sentiment = nb_classifier.predict(test_comments)

# Calculate accuracy of predictions
accuracy = accuracy_score(test_data["Sentiment"], predicted_sentiment)

print("Accuracy:", accuracy)